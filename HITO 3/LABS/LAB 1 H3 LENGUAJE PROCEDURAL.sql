CREATE DATABASE HITO3_LENGUAJE_PROCEDURAL;

USE HITO3_LENGUAJE_PROCEDURAL;

#                               APUNTES

#LENGUAJE PROCEDURAL ES LA PROGRAMACION A NIVEL DE BASE DE DATOS

#LENGUAJE PROCEDURAL ES UN CONJUNTO INSTRUCCIONES  Y  ESTRUCTURAS DE CONTROL

#                  NIVELES DE MANEJO DE BASE DE DATOS
#    -GESTION DE BASE DE DATOS
#    -PROGRAMACION A BASE DE DATOS
#    -ADMINISTRACION DEL SERVIDOR

#                        VARIABL4ES DE USUARIO

#  PARA EL ACCESO A LA BASE DE DATOS EL USUARIO UTILIZA DIFERENTES HILOS DE CONEXION DONDE LAS VARIABLES SON PRIVADAS
#  LAS VARIABLES S QUE SE DECLARA SOLO ESTAN VISIBLES PARA EL USUARIO QUE LAS CREA




#///////////////////////////////////////////////////////////////////////////////////////


SET @ADMIN='ADMIN';
SELECT @ADMIN;

SET @ADMIN='GUEST';

DECLARE RESPONSE INTEGER DEFAULT 0;


#ejercicio

CREATE  OR REPLACE  FUNCTION  USANDO_VARIABLE_GLOBAL()
RETURNS VARCHAR (20)

BEGIN

    DECLARE RESPUESTA VARCHAR(20) DEFAULT '';

    IF @ADMIN='ADMIN'
    THEN
    SET RESPUESTA='USUARIO ADMIN';
    ELSE
    SET RESPUESTA='USUARIO ';
    END IF;
    RETURN RESPUESTA;
end;

select USANDO_VARIABLE_GLOBAL();

#///////////////////////////////////////////////////////////////////////////////////////////////
#EJERCICIO 2

CREATE  OR REPLACE  FUNCTION  USANDO_VARIABLE_GLOBAL_V2()
RETURNS VARCHAR (20)
BEGIN

    DECLARE RESPUESTA VARCHAR(20) DEFAULT '';

    CASE
        WHEN @ADMIN ='ADMIN' THEN SET RESPUESTA = 'USUARIO ADMIN';
        WHEN @ADMIN='GUEST' THEN SET RESPUESTA ='USUARIO INVITADO';
        ELSE SET RESPUESTA='USUARIO NUEVO';
    END CASE ;
    RETURN RESPUESTA;
end;

SET @ADMIN='LORENA';

SELECT USANDO_VARIABLE_GLOBAL_V2();

#/////////////////////////////////////////////////////////////////////////////////////////////////////
#EJERCICIO 3

#CREAR UNA VARIABLE GLOBAL DE NOMBRE PRECIO (NUMERO)
#CREAR UNA FUNCION  QUE MANEJE CASE

#SI EL PRECIO ES MAYOR A 10 Y MENOR IGUAL A 20 RETORNAR EL MENSAJE BASICO
#SI EL PRECIO ES MAYOR A 20 Y MENOR IGUAL A 30 RETORNAR EL MENSAJE INTERMEDIO
#SI EL PRECIO ES MAYOR A 30 Y MENOR IGUAL A 50 RETORNAR EL MENSAJE SUPERIOR
#SI EL PRECIO ES MAYOR A 50 RETORNAR EL MENSAJE DESCONOCIDO

SET @PRECIO=100;

CREATE OR REPLACE FUNCTION MANEJO_CASE()
RETURNS VARCHAR(20)
BEGIN
        DECLARE RESP  VARCHAR(20) DEFAULT '';

    CASE
        WHEN @PRECIO>10 AND @PRECIO<=20 THEN SET RESP = 'BASICO';
        WHEN @PRECIO>20 AND @PRECIO<=30 THEN SET RESP ='INTERMEDIO';
        WHEN @PRECIO>30 AND @PRECIO<=50 THEN SET RESP='SUPERIOR';
        WHEN @PRECIO>50 THEN SET RESP='CARISIMO';
        ELSE SET RESP='DESCONOCIDO';
    END CASE ;
    RETURN RESP;

END;

SELECT MANEJO_CASE();
#///////////////////////////////////////////////////////////////////////////////////////////////
#    EJERCICIO 4
# CREAR UNA FUNCION QUE RECIBE  UN PARAMETRO INTERGER
#   LA FUNCION DEBE RETORNAR UN TEXTO TEXT COMO RESPUESTA
#   EL PARAMETRO ES UN VALOR NUMERICO 'CREDIT NUMBER'
#   SI ES MAYOR A 50000 ES 'PLATINUM'
#   SI ES MAYOR IGUAL A 10000 Y MENOR IGUAL A 50000 ES 'GOLD'
#   SI ES MENOR A 10000 ES SILVER
#   LA FUNCION DEBE RETORNAR INDICANDO SI ESE CLIENTE ES:  PLATINUM GOLD O SILVER EN BASE AL
#       VALOR DEL 'CREDIT_NUMBER'

SET @CREDIT_NUMBER=60000;

CREATE OR REPLACE FUNCTION CLASE_CLIENTE()

RETURNS VARCHAR(20)
BEGIN
        DECLARE RESP  VARCHAR(20) DEFAULT '';

    CASE
        WHEN @CREDIT_NUMBER<10000  THEN SET RESP ='SILVER';
        WHEN @CREDIT_NUMBER>=10000 AND @CREDIT_NUMBER<50000 THEN SET RESP='GOLD';
        WHEN @CREDIT_NUMBER>=50000 THEN SET RESP='PLATINUM';
        ELSE SET RESP='NO PERTENCE A NINGUNA CLASE';

    END CASE ;
    RETURN RESP;

END;

SET @CREDIT_NUMBER=50000;

SELECT CLASE_CLIENTE();

#//////////////////////////////////////////////////////////////////////////////////////////////
#   EJERCICIO 5
#USANDO UN WHILE CREAR UNA CADENA QUE ME DEVUELVA LOS 10 PRIMEROS NUMEROS NATURALES


CREATE OR REPLACE FUNCTION BUCLE_WHILE()
    RETURNS VARCHAR(1000)
    BEGIN
        DECLARE NUMERO INTEGER DEFAULT 1;
        DECLARE LIMITE INTEGER DEFAULT 10;
        DECLARE CADENA VARCHAR(1000) DEFAULT '';

        WHILE NUMERO<= LIMITE DO
        SET CADENA=CONCAT(CADENA,NUMERO,' ');
        SET NUMERO=NUMERO+1;
        END WHILE;

    RETURN CADENA ;
end;

SELECT BUCLE_WHILE();


